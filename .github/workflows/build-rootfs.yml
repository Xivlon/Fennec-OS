name: Build Fennec OS RootFS

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu \
            cpio qemu-utils libssl-dev wget gzip libncurses-dev flex bison

      - name: Download Linux Kernel
        run: |
          mkdir -p build/linux-6.5
          cd build
          wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.5.tar.xz
          tar xf linux-6.5.tar.xz

      - name: Prepare Kernel Config
        run: |
          cd build/linux-6.5
          make defconfig   # generates working .config
      
      - name: Install Kernel Headers
        run: |
          cd build/linux-6.5
          make headers_install INSTALL_HDR_PATH=$(pwd)/usr
          
      - name: Download BusyBox
        run: |
          mkdir -p build
          cd build
          wget https://busybox.net/downloads/busybox-1.36.1.tar.bz2
          tar xjf busybox-1.36.1.tar.bz2

      - name: Prepare BusyBox Config
        run: |
          cd build/busybox-1.36.1
          make defconfig   # generates default .config
     
      - name: Build BusyBox
        run: |
          cd build/busybox-1.36.1
          make -j$(nproc)

      - name: Build RootFS
        run: |
          make ARCH=${{ matrix.arch }} rootfs

      - name: List outputs
        run: |
          ls -al build
          file build/fennec-init-${{ matrix.arch }} || true
          ls -al build/*${{ matrix.arch }}.cpio.gz || true

      - name: Upload initramfs
        uses: actions/upload-artifact@v4
        with:
          name: fennec-rootfs-${{ matrix.arch }}
          path: |
            build/rootfs-${{ matrix.arch }}.cpio.gz
            build/fennec-init-${{ matrix.arch }}
